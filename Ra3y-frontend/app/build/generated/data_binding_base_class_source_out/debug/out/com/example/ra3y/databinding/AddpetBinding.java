// Generated by view binder compiler. Do not edit!
package com.example.ra3y.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.ra3y.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddpetBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText PetName;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final ProgressBar progressBar2;

  @NonNull
  public final Spinner spinner1;

  @NonNull
  public final Button submitpetReg;

  private AddpetBinding(@NonNull ConstraintLayout rootView, @NonNull EditText PetName,
      @NonNull ImageView imageView, @NonNull ProgressBar progressBar2, @NonNull Spinner spinner1,
      @NonNull Button submitpetReg) {
    this.rootView = rootView;
    this.PetName = PetName;
    this.imageView = imageView;
    this.progressBar2 = progressBar2;
    this.spinner1 = spinner1;
    this.submitpetReg = submitpetReg;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddpetBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddpetBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.addpet, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddpetBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Pet_name;
      EditText PetName = ViewBindings.findChildViewById(rootView, id);
      if (PetName == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.progressBar2;
      ProgressBar progressBar2 = ViewBindings.findChildViewById(rootView, id);
      if (progressBar2 == null) {
        break missingId;
      }

      id = R.id.spinner1;
      Spinner spinner1 = ViewBindings.findChildViewById(rootView, id);
      if (spinner1 == null) {
        break missingId;
      }

      id = R.id.submitpetReg;
      Button submitpetReg = ViewBindings.findChildViewById(rootView, id);
      if (submitpetReg == null) {
        break missingId;
      }

      return new AddpetBinding((ConstraintLayout) rootView, PetName, imageView, progressBar2,
          spinner1, submitpetReg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
